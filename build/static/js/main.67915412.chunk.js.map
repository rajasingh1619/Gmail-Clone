{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","result","setResult","handleClick","e","concat","target","name","clear","backspace","slice","calculate","eval","toString","err","className","type","value","onClick","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"s1BAGA,SAASA,MAEP,cAA6BC,oDAAS,IAAtC,+LAAOC,OAAP,cAAgBC,UAAhB,cAEMC,YAAc,SAACC,GACnBF,UAAUD,OAAOI,OAAOD,EAAEE,OAAOC,QAG/BC,MAAQ,WACVN,UAAU,KAGRO,UAAY,WACbP,UAAUD,OAAOS,MAAM,GAAK,KAG3BC,UAAY,SAAZA,YACJ,IACET,UAAUU,KAAKX,QAAQY,YACxB,MAAMC,KACJZ,UAAU,kBAIb,OACE,6HACG,mEAAKa,UAAY,YAAjB,UACE,4EACE,oEAAOC,KAAO,OAAOC,MAAShB,WAIlC,mEAAKc,UAAY,SAAjB,UACE,qEAAQG,QAAWV,MAAOW,GAAK,QAAQJ,UAAY,aAAnD,mBACA,qEAAQG,QAAWT,UAAWU,GAAK,YAAYJ,UAAY,aAA3D,eACA,qEAAQR,KAAO,IAAIW,QAAWf,YAAaY,UAAY,aAAvD,kBACA,qEAAQR,KAAO,IAAIW,QAAWf,YAA9B,eACA,qEAAQI,KAAO,IAAIW,QAAWf,YAA9B,eACA,qEAAQI,KAAO,IAAIW,QAAWf,YAA9B,eACA,qEAAQI,KAAO,IAAIW,QAAWf,YAAaY,UAAY,aAAvD,kBACA,qEAAQR,KAAO,IAAIW,QAAWf,YAA9B,eACA,qEAAQI,KAAO,IAAIW,QAAWf,YAA9B,eACA,qEAAQI,KAAO,IAAIW,QAAWf,YAA9B,eACA,qEAAQI,KAAO,IAAIW,QAAWf,YAAaY,UAAY,aAAvD,oBACA,qEAAQR,KAAO,IAAIW,QAAWf,YAA9B,eACA,qEAAQI,KAAO,IAAIW,QAAWf,YAA9B,eACA,qEAAQI,KAAO,IAAIW,QAAWf,YAA9B,eACA,qEAAQI,KAAO,IAAIW,QAAWf,YAAaY,UAAY,aAAvD,eACA,qEAAQR,KAAO,IAAIW,QAAWf,YAA9B,eACA,qEAAQI,KAAO,IAAIW,QAAWf,YAA9B,eACA,qEAAQe,QAAWP,UAAWQ,GAAK,SAASJ,UAAY,aAAxD,uBAOMhB,2B,iIChDAqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChC,EAAA,EAAD,MAEFiC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.67915412.chunk.js","sourcesContent":["import React , { useState } from 'react'\nimport './App.css';\n\nfunction App() {\n\n  const [result , setResult] = useState(\"\");\n\n  const handleClick = (e) =>{\n    setResult(result.concat(e.target.name));\n  }\n\nconst clear = () =>{\n    setResult(\"\");\n}\n\nconst backspace = () =>{\n     setResult(result.slice(0 , -1));\n}\n\nconst calculate = () =>{\n  try{\n    setResult(eval(result).toString());\n  }catch(err){\n     setResult(\"Syntax Error\");\n  } \n}\n\n  return (\n    <>\n       <div className = \"container\">\n         <form>\n           <input type = \"text\" value = {result} />\n         </form>\n       \n\n       <div className = \"keypad\">\n         <button onClick = {clear} id = \"clear\" className = \"heighlight\">Clear</button>\n         <button onClick = {backspace} id = \"backspace\" className = \"heighlight\">C</button>\n         <button name = \"/\" onClick = {handleClick} className = \"heighlight\">&divide;</button>\n         <button name = \"7\" onClick = {handleClick} >7</button>\n         <button name = \"8\" onClick = {handleClick}>8</button>\n         <button name = \"9\" onClick = {handleClick}>9</button>\n         <button name = \"*\" onClick = {handleClick} className = \"heighlight\">&times;</button>\n         <button name = \"4\" onClick = {handleClick}>4</button>\n         <button name = \"5\" onClick = {handleClick}>5</button>\n         <button name = \"6\" onClick = {handleClick}>6</button>\n         <button name = \"-\" onClick = {handleClick} className = \"heighlight\">&ndash;</button>\n         <button name = \"1\" onClick = {handleClick}>1</button>\n         <button name = \"2\" onClick = {handleClick}>2</button>\n         <button name = \"3\" onClick = {handleClick}>3</button>\n         <button name = \"+\" onClick = {handleClick} className = \"heighlight\">+</button>\n         <button name = \"0\" onClick = {handleClick}>0</button>\n         <button name = \".\" onClick = {handleClick}>.</button>\n         <button onClick = {calculate} id = \"result\" className = \"heighlight\">=</button>\n       </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}